generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum NoteType {
  TEXT
  MARKDOWN
  MINDMAP
  FLASHCARD
}

enum NoteStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  notes         Note[]
  collaborations Collaboration[]
}

model Note {
  id          String     @id @default(uuid())
  title       String
  content     String
  type        NoteType   @default(TEXT)
  status      NoteStatus @default(DRAFT)
  authorId    String
  workspaceId String?
  parentId    String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Relations
  author         User              @relation(fields: [authorId], references: [id], onDelete: Cascade)
  parent         Note?             @relation("NoteHierarchy", fields: [parentId], references: [id])
  children       Note[]            @relation("NoteHierarchy")
  tags           NoteTag[]
  collaborations Collaboration[]
  attachments    Attachment[]
}

model Tag {
  id        String   @id @default(uuid())
  name      String   @unique
  color     String   @default("#FF6B35")
  createdAt DateTime @default(now())

  // Relations
  notes NoteTag[]
}

model NoteTag {
  noteId String
  tagId  String

  // Relations
  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)
  tag  Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([noteId, tagId])
}

model Collaboration {
  id     String @id @default(uuid())
  userId String
  noteId String
  type   String @default("VIEW") // VIEW, EDIT, ADMIN

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)

  @@unique([userId, noteId])
}

model Attachment {
  id       String @id @default(uuid())
  filename String
  url      String
  size     Int
  mimeType String
  noteId   String

  // Relations
  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}